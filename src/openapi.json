{
  "openapi": "3.0.3",
  "info": {
    "title": "Example App",
    "version": "0.0.0",
    "description": "Example App API"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "JohnDoe"
          },
          "email": {
            "type": "string",
            "example": "gogemekuse@gmail.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYSTEM_ADMIN",
              "DONOR",
              "COLLECTOR",
              "MANAGER",
              "STORE_MANAGER",
              "LABORATORY",
              "HOSPITAL"
            ],
            "example": "SYSTEM_ADMIN"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "role",
          "password",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Seblewengel Mamo"
          },
          "email": {
            "type": "string",
            "example": "gogemekuse@gmail.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYSTEM_ADMIN",
              "DONOR",
              "COLLECTOR",
              "MANAGER",
              "STORE_MANAGER",
              "LABORATORY",
              "HOSPITAL"
            ],
            "example": "SYSTEM_ADMIN"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "name",
          "email",
          "role",
          "password"
        ]
      },
      "Donor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "example": "A."
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "title": {
            "type": "string",
            "example": "Mr."
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "age": {
            "type": "number",
            "example": 33
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "subCity": {
            "type": "string",
            "example": "Manhattan"
          },
          "zone": {
            "type": "string",
            "example": "Central"
          },
          "woreda": {
            "type": "string",
            "example": "5"
          },
          "kebele": {
            "type": "string",
            "example": "12"
          },
          "telephone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "cellPhone": {
            "type": "string",
            "example": "987-654-3210"
          },
          "organization": {
            "type": "string",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "poBox": {
            "type": "string",
            "example": "P.O. Box 456"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "medicalHistory": {
            "type": "string",
            "example": "None"
          },
          "collectorId": {
            "type": "number",
            "example": 2
          },
          "systemAdminId": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "birthDate",
          "age",
          "gender",
          "city",
          "subCity",
          "zone",
          "woreda",
          "kebele",
          "email",
          "password",
          "username",
          "bloodType",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewDonor": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "example": "A."
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "title": {
            "type": "string",
            "example": "Mr."
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "age": {
            "type": "number",
            "example": 33
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "subCity": {
            "type": "string",
            "example": "Manhattan"
          },
          "zone": {
            "type": "string",
            "example": "Central"
          },
          "woreda": {
            "type": "string",
            "example": "5"
          },
          "kebele": {
            "type": "string",
            "example": "12"
          },
          "telephone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "cellPhone": {
            "type": "string",
            "example": "987-654-3210"
          },
          "organization": {
            "type": "string",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "poBox": {
            "type": "string",
            "example": "P.O. Box 456"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "medicalHistory": {
            "type": "string",
            "example": "None"
          },
          "collectorId": {
            "type": "number",
            "example": 2
          },
          "systemAdminId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "firstName",
          "lastName",
          "birthDate",
          "age",
          "gender",
          "city",
          "subCity",
          "zone",
          "woreda",
          "kebele",
          "email",
          "password",
          "username",
          "bloodType"
        ]
      },
      "UpdateDonor": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "example": "A."
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "title": {
            "type": "string",
            "example": "Mr."
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "age": {
            "type": "number",
            "example": 33
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "subCity": {
            "type": "string",
            "example": "Manhattan"
          },
          "zone": {
            "type": "string",
            "example": "Central"
          },
          "woreda": {
            "type": "string",
            "example": "5"
          },
          "kebele": {
            "type": "string",
            "example": "12"
          },
          "telephone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "cellPhone": {
            "type": "string",
            "example": "987-654-3210"
          },
          "organization": {
            "type": "string",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "poBox": {
            "type": "string",
            "example": "P.O. Box 456"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "medicalHistory": {
            "type": "string",
            "example": "None"
          },
          "collectorId": {
            "type": "number",
            "example": 2
          },
          "systemAdminId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "userId": {
            "type": "number",
            "example": 1
          },
          "accountType": {
            "type": "string",
            "example": "basic"
          },
          "accountStatus": {
            "type": "string",
            "example": "active"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "userId",
          "accountType",
          "accountStatus",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewAccount": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "accountType": {
            "type": "string",
            "example": "basic"
          },
          "accountStatus": {
            "type": "string",
            "example": "active"
          }
        },
        "required": [
          "userId",
          "accountType",
          "accountStatus"
        ]
      },
      "Blood": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "example": 500
          },
          "donationDate": {
            "type": "string",
            "example": "2024-10-10T00:00:00Z"
          }
        },
        "required": [
          "id",
          "bloodType",
          "quantity",
          "donationDate"
        ]
      },
      "Inventory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Blood Pack A+"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "expirationDate": {
            "type": "string",
            "example": "2025-12-31T23:59:59Z"
          },
          "totalQuantity": {
            "type": "number",
            "example": 1000
          },
          "createdAt": {
            "type": "string",
            "example": "2024-11-05T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-11-05T10:00:00.000Z"
          },
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "blood": {
            "$ref": "#/components/schemas/Blood"
          }
        },
        "required": [
          "id",
          "name",
          "bloodType",
          "expirationDate",
          "totalQuantity",
          "createdAt",
          "updatedAt",
          "bloodId",
          "blood"
        ]
      },
      "NewInventory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Blood Pack A+"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "expirationDate": {
            "type": "string",
            "example": "2025-12-31T23:59:59Z"
          },
          "totalQuantity": {
            "type": "number",
            "example": 1000
          },
          "bloodId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "name",
          "bloodType",
          "expirationDate",
          "totalQuantity",
          "bloodId"
        ]
      },
      "SystemAdmin Accounts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "userId": {
              "type": "number",
              "example": 1
            },
            "accountType": {
              "type": "string",
              "example": "basic"
            },
            "accountStatus": {
              "type": "string",
              "example": "active"
            },
            "createdAt": {
              "type": "string",
              "example": "2023-07-15T10:00:00.000Z"
            },
            "updatedAt": {
              "type": "string",
              "example": "2023-07-15T10:00:00.000Z"
            }
          },
          "required": [
            "id",
            "userId",
            "accountType",
            "accountStatus",
            "createdAt",
            "updatedAt"
          ]
        }
      },
      "SystemAdmin Notifications": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "example": 1
            },
            "message": {
              "type": "string",
              "example": "New account created."
            },
            "createdAt": {
              "type": "string",
              "example": "2023-07-15T10:00:00.000Z"
            }
          },
          "required": [
            "id",
            "message",
            "createdAt"
          ]
        }
      },
      "SystemAdmin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "admin_user"
          },
          "accounts": {
            "$ref": "#/components/schemas/SystemAdmin Accounts"
          },
          "notifications": {
            "$ref": "#/components/schemas/SystemAdmin Notifications"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "username",
          "accounts",
          "notifications",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewSystemAdmin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "example": "admin_user"
          }
        },
        "required": [
          "username"
        ]
      },
      "Hospital": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "City Hospital"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Cityville"
          },
          "contactInfo": {
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "contact@cityhospital.com"
          },
          "username": {
            "type": "string",
            "example": "city_hospital_admin"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "contactInfo",
          "email",
          "username",
          "password",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewHospital": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "City Hospital"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Cityville"
          },
          "contactInfo": {
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "contact@cityhospital.com"
          },
          "username": {
            "type": "string",
            "example": "city_hospital_admin"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          }
        },
        "required": [
          "name",
          "address",
          "contactInfo",
          "email",
          "username",
          "password"
        ]
      },
      "NewBlood": {
        "type": "object",
        "properties": {
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "minimum": 0,
            "example": 500
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "bloodType",
          "quantity",
          "donationDate"
        ]
      },
      "Appointment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "appointmentDate": {
            "type": "string",
            "example": "2024-11-07T10:00:00.000Z"
          },
          "status": {
            "type": "string",
            "example": "Scheduled"
          },
          "donorId": {
            "type": "number",
            "example": 1
          },
          "donor": {
            "$ref": "#/components/schemas/Donor"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-11-01T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2024-11-01T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "appointmentDate",
          "status",
          "donorId",
          "donor",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewAppointment": {
        "type": "object",
        "properties": {
          "appointmentDate": {
            "type": "string",
            "example": "2024-11-07T10:00:00.000Z"
          },
          "status": {
            "type": "string",
            "example": "Scheduled"
          },
          "donorId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "appointmentDate",
          "status",
          "donorId"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "content": {
            "type": "string",
            "example": "Blood donation request"
          },
          "sendDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          },
          "donorId": {
            "type": "number",
            "example": 1
          },
          "adminId": {
            "type": "number",
            "example": 1
          },
          "hospital": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          },
          "donor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "bloodType": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "bloodType"
            ]
          },
          "systemAdmin": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "username": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "username"
            ]
          }
        },
        "required": [
          "id",
          "content",
          "sendDate"
        ]
      },
      "NewNotification": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Blood donation request"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          },
          "donorId": {
            "type": "number",
            "example": 1
          },
          "adminId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "content"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "orderDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "example": 3
          },
          "status": {
            "type": "string",
            "example": "Pending"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "id",
          "orderDate",
          "bloodType",
          "quantity",
          "status",
          "hospitalId"
        ]
      },
      "NewOrder": {
        "type": "object",
        "properties": {
          "orderDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "example": 3
          },
          "status": {
            "type": "string",
            "example": "Pending"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "orderDate",
          "bloodType",
          "quantity",
          "status",
          "hospitalId"
        ]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          },
          "inventories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "id"
              ]
            },
            "example": [
              {
                "id": 1
              }
            ]
          }
        },
        "required": [
          "id",
          "hospitalId"
        ]
      },
      "NewIntegration": {
        "type": "object",
        "properties": {
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "hospitalId"
        ]
      },
      "Report": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Monthly Report"
          },
          "content": {
            "type": "string",
            "example": "This is the content of the report."
          },
          "generatedBy": {
            "type": "number",
            "example": 1
          },
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "generatedBy",
          "user",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewReport": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Monthly Report"
          },
          "content": {
            "type": "string",
            "example": "This is the content of the report."
          },
          "generatedBy": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "title",
          "content",
          "generatedBy"
        ]
      },
      "Donation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "donorId": {
            "type": "number",
            "example": 1
          },
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "donorId",
          "bloodId",
          "donationDate",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewDonation": {
        "type": "object",
        "properties": {
          "donorId": {
            "type": "number",
            "example": 1
          },
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "donorId",
          "bloodId",
          "donationDate"
        ]
      },
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "collectedDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "bloodId",
          "collectedDate",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewCollection": {
        "type": "object",
        "properties": {
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "collectedDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "bloodId",
          "collectedDate"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "gogemekuse@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "New Donor": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "example": "A."
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "title": {
            "type": "string",
            "example": "Mr."
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "age": {
            "type": "number",
            "example": 33
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "subCity": {
            "type": "string",
            "example": "Manhattan"
          },
          "zone": {
            "type": "string",
            "example": "Central"
          },
          "woreda": {
            "type": "string",
            "example": "5"
          },
          "kebele": {
            "type": "string",
            "example": "12"
          },
          "telephone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "cellPhone": {
            "type": "string",
            "example": "987-654-3210"
          },
          "organization": {
            "type": "string",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "poBox": {
            "type": "string",
            "example": "P.O. Box 456"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "medicalHistory": {
            "type": "string",
            "example": "None"
          },
          "collectorId": {
            "type": "number",
            "example": 2
          },
          "systemAdminId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "firstName",
          "lastName",
          "birthDate",
          "age",
          "gender",
          "city",
          "subCity",
          "zone",
          "woreda",
          "kebele",
          "email",
          "password",
          "username",
          "bloodType"
        ]
      },
      "Update Donor": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "middleName": {
            "type": "string",
            "example": "A."
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "title": {
            "type": "string",
            "example": "Mr."
          },
          "birthDate": {
            "type": "string",
            "example": "1990-01-01"
          },
          "age": {
            "type": "number",
            "example": 33
          },
          "gender": {
            "type": "string",
            "example": "Male"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "subCity": {
            "type": "string",
            "example": "Manhattan"
          },
          "zone": {
            "type": "string",
            "example": "Central"
          },
          "woreda": {
            "type": "string",
            "example": "5"
          },
          "kebele": {
            "type": "string",
            "example": "12"
          },
          "telephone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "cellPhone": {
            "type": "string",
            "example": "987-654-3210"
          },
          "organization": {
            "type": "string",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "poBox": {
            "type": "string",
            "example": "P.O. Box 456"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "medicalHistory": {
            "type": "string",
            "example": "None"
          },
          "collectorId": {
            "type": "number",
            "example": 2
          },
          "systemAdminId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "New Account": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "accountType": {
            "type": "string",
            "example": "basic"
          },
          "accountStatus": {
            "type": "string",
            "example": "active"
          }
        },
        "required": [
          "userId",
          "accountType",
          "accountStatus"
        ]
      },
      "Update Account": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "accountType": {
            "type": "string",
            "example": "premium"
          },
          "accountStatus": {
            "type": "string",
            "example": "inactive"
          }
        }
      },
      "New Inventory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Blood Pack A+"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "expirationDate": {
            "type": "string",
            "example": "2025-12-31T23:59:59Z"
          },
          "totalQuantity": {
            "type": "number",
            "example": 1000
          },
          "bloodId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "name",
          "bloodType",
          "expirationDate",
          "totalQuantity",
          "bloodId"
        ]
      },
      "Update Inventory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Blood Pack A+"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "expirationDate": {
            "type": "string",
            "example": "2025-12-31T23:59:59Z"
          },
          "totalQuantity": {
            "type": "number",
            "example": 1000
          }
        }
      },
      "System Admin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "admin_user"
          },
          "accounts": {
            "$ref": "#/components/schemas/SystemAdmin Accounts"
          },
          "notifications": {
            "$ref": "#/components/schemas/SystemAdmin Notifications"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "username",
          "accounts",
          "notifications",
          "createdAt",
          "updatedAt"
        ]
      },
      "New System Admin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "example": "admin_user"
          }
        },
        "required": [
          "username"
        ]
      },
      "Update System Admin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "new_admin_user"
          }
        }
      },
      "New Hospital": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "City Hospital"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, Cityville"
          },
          "contactInfo": {
            "type": "string",
            "example": "+1234567890"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "contact@cityhospital.com"
          },
          "username": {
            "type": "string",
            "example": "city_hospital_admin"
          },
          "password": {
            "type": "string",
            "example": "securePassword123"
          }
        },
        "required": [
          "name",
          "address",
          "contactInfo",
          "email",
          "username",
          "password"
        ]
      },
      "Update Hospital": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Central City Hospital"
          },
          "address": {
            "type": "string",
            "example": "456 Another St, Cityville"
          },
          "contactInfo": {
            "type": "string",
            "example": "+0987654321"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "support@cityhospital.com"
          },
          "username": {
            "type": "string",
            "example": "new_city_hospital_admin"
          },
          "password": {
            "type": "string",
            "example": "newSecurePassword123"
          }
        }
      },
      "New Blood": {
        "type": "object",
        "properties": {
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "minimum": 0,
            "example": 500
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "bloodType",
          "quantity",
          "donationDate"
        ]
      },
      "Update Blood": {
        "type": "object",
        "properties": {
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "minimum": 0,
            "example": 500
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        }
      },
      "New Appointment": {
        "type": "object",
        "properties": {
          "appointmentDate": {
            "type": "string",
            "example": "2024-11-07T10:00:00.000Z"
          },
          "status": {
            "type": "string",
            "example": "Scheduled"
          },
          "donorId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "appointmentDate",
          "status",
          "donorId"
        ]
      },
      "Update Appointment": {
        "type": "object",
        "properties": {
          "appointmentDate": {
            "type": "string",
            "example": "2024-11-07T10:00:00.000Z"
          },
          "status": {
            "type": "string",
            "example": "Completed"
          },
          "donorId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "New Notification": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Blood donation request"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          },
          "donorId": {
            "type": "number",
            "example": 1
          },
          "adminId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "content"
        ]
      },
      "Update Notification": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Updated blood donation request"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          },
          "donorId": {
            "type": "number",
            "example": 1
          },
          "adminId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "New Order": {
        "type": "object",
        "properties": {
          "orderDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "example": 3
          },
          "status": {
            "type": "string",
            "example": "Pending"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "orderDate",
          "bloodType",
          "quantity",
          "status",
          "hospitalId"
        ]
      },
      "Update Order": {
        "type": "object",
        "properties": {
          "orderDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "quantity": {
            "type": "number",
            "example": 3
          },
          "status": {
            "type": "string",
            "example": "Pending"
          },
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "New Integration": {
        "type": "object",
        "properties": {
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "hospitalId"
        ]
      },
      "Update Integration": {
        "type": "object",
        "properties": {
          "hospitalId": {
            "type": "number",
            "example": 1
          }
        }
      },
      "New Report": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Monthly Report"
          },
          "content": {
            "type": "string",
            "example": "This is the content of the report."
          },
          "generatedBy": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "title",
          "content",
          "generatedBy"
        ]
      },
      "Update Report": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated Report Title"
          },
          "content": {
            "type": "string",
            "example": "Updated content of the report."
          },
          "generatedBy": {
            "type": "number",
            "example": 1
          }
        }
      },
      "New Donation": {
        "type": "object",
        "properties": {
          "donorId": {
            "type": "number",
            "example": 1
          },
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "donorId",
          "bloodId",
          "donationDate"
        ]
      },
      "Update Donation": {
        "type": "object",
        "properties": {
          "donorId": {
            "type": "number",
            "example": 1
          },
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "donationDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        }
      },
      "New Collection": {
        "type": "object",
        "properties": {
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "collectedDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "bloodId",
          "collectedDate"
        ]
      },
      "Update Collection": {
        "type": "object",
        "properties": {
          "bloodId": {
            "type": "number",
            "example": 1
          },
          "collectedDate": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        }
      }
    },
    "parameters": {},
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "your_access_token"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "your_refresh_token"
                    }
                  },
                  "required": [
                    "accessToken",
                    "refreshToken"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "your_refresh_token"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "your_access_token"
                    }
                  },
                  "required": [
                    "accessToken"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/protected": {
      "get": {
        "summary": "Get protected resource",
        "tags": [
          "Protected"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A protected resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "This is a protected route"
                    },
                    "user": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/User"
                        },
                        {
                          "properties": {
                            "userId": {
                              "type": "number",
                              "example": 1
                            },
                            "username": {
                              "type": "string",
                              "example": "JohnDoe"
                            }
                          },
                          "required": [
                            "userId",
                            "username"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/donor": {
      "post": {
        "summary": "Register a new donor",
        "tags": [
          "Donor"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Donor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created donor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all donors",
        "tags": [
          "Donor"
        ],
        "responses": {
          "200": {
            "description": "A list of donors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Donor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/donor/{id}": {
      "get": {
        "summary": "Get a donor by ID",
        "tags": [
          "Donor"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The donor with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          },
          "404": {
            "description": "Donor not found"
          }
        }
      },
      "patch": {
        "summary": "Update a donor",
        "tags": [
          "Donor"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Donor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated donor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          },
          "404": {
            "description": "Donor not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a donor",
        "tags": [
          "Donor"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Donor deleted successfully"
          },
          "404": {
            "description": "Donor not found"
          }
        }
      }
    },
    "/api/accounts": {
      "post": {
        "summary": "Create a new account record",
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Account"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created account record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      }
    },
    "/api/account": {
      "get": {
        "summary": "Get all account records",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "A list of account records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/account/{id}": {
      "get": {
        "summary": "Get an account record by ID",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The account record with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "Account record not found"
          }
        }
      },
      "patch": {
        "summary": "Update an account record",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated account record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "404": {
            "description": "Account record not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an account record",
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account record deleted successfully"
          },
          "404": {
            "description": "Account record not found"
          }
        }
      }
    },
    "/api/inventory": {
      "post": {
        "summary": "Create a new inventory record",
        "tags": [
          "Inventory"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Inventory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created inventory record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all inventory records",
        "tags": [
          "Inventory"
        ],
        "responses": {
          "200": {
            "description": "A list of all inventory records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Inventory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/inventory/{id}": {
      "get": {
        "summary": "Get an inventory record by ID",
        "tags": [
          "Inventory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The inventory record with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found"
          }
        }
      },
      "patch": {
        "summary": "Update an inventory record",
        "tags": [
          "Inventory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Inventory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated inventory record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inventory"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an inventory record",
        "tags": [
          "Inventory"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Inventory record deleted successfully"
          },
          "404": {
            "description": "Inventory not found"
          }
        }
      }
    },
    "/api/system-admin": {
      "post": {
        "summary": "Register a new system admin",
        "tags": [
          "SystemAdmin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New System Admin"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created system admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System Admin"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all system admins",
        "tags": [
          "SystemAdmin"
        ],
        "responses": {
          "200": {
            "description": "A list of system admins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/System Admin"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system-admin/{id}": {
      "get": {
        "summary": "Get a system admin by ID",
        "tags": [
          "SystemAdmin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The system admin with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System Admin"
                }
              }
            }
          },
          "404": {
            "description": "System admin not found"
          }
        }
      },
      "patch": {
        "summary": "Update a system admin",
        "tags": [
          "SystemAdmin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update System Admin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated system admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/System Admin"
                }
              }
            }
          },
          "404": {
            "description": "System admin not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a system admin",
        "tags": [
          "SystemAdmin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "System admin deleted successfully"
          },
          "404": {
            "description": "System admin not found"
          }
        }
      }
    },
    "/api/hospitals": {
      "post": {
        "summary": "Register a new hospital",
        "tags": [
          "Hospital"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Hospital"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created hospital",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hospital"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all hospitals",
        "tags": [
          "Hospital"
        ],
        "responses": {
          "200": {
            "description": "A list of hospitals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hospital"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hospitals/{id}": {
      "get": {
        "summary": "Get a hospital by ID",
        "tags": [
          "Hospital"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The hospital with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hospital"
                }
              }
            }
          },
          "404": {
            "description": "Hospital not found"
          }
        }
      },
      "patch": {
        "summary": "Update a hospital",
        "tags": [
          "Hospital"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Hospital"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated hospital",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hospital"
                }
              }
            }
          },
          "404": {
            "description": "Hospital not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a hospital",
        "tags": [
          "Hospital"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Hospital deleted successfully"
          },
          "404": {
            "description": "Hospital not found"
          }
        }
      }
    },
    "/api/blood": {
      "post": {
        "summary": "Create a new blood record",
        "tags": [
          "Blood"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Blood"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created blood record",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Blood"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "bloodType": {
                          "type": "string",
                          "example": "A+"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0,
                          "example": 500
                        },
                        "donationDate": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        }
                      },
                      "required": [
                        "id",
                        "bloodType",
                        "quantity",
                        "donationDate",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all blood records",
        "tags": [
          "Blood"
        ],
        "responses": {
          "200": {
            "description": "A list of blood records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Blood"
                      },
                      {
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "bloodType": {
                            "type": "string",
                            "example": "A+"
                          },
                          "quantity": {
                            "type": "number",
                            "minimum": 0,
                            "example": 500
                          },
                          "donationDate": {
                            "type": "string",
                            "example": "2023-07-15T10:00:00.000Z"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2023-07-15T10:00:00.000Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2023-07-15T10:00:00.000Z"
                          }
                        },
                        "required": [
                          "id",
                          "bloodType",
                          "quantity",
                          "donationDate",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/blood/{id}": {
      "get": {
        "summary": "Get a blood record by ID",
        "tags": [
          "Blood"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The blood record with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Blood"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "bloodType": {
                          "type": "string",
                          "example": "A+"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0,
                          "example": 500
                        },
                        "donationDate": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        }
                      },
                      "required": [
                        "id",
                        "bloodType",
                        "quantity",
                        "donationDate",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Blood record not found"
          }
        }
      },
      "patch": {
        "summary": "Update a blood record",
        "tags": [
          "Blood"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Blood"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated blood record",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Blood"
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "bloodType": {
                          "type": "string",
                          "example": "A+"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0,
                          "example": 500
                        },
                        "donationDate": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-07-15T10:00:00.000Z"
                        }
                      },
                      "required": [
                        "id",
                        "bloodType",
                        "quantity",
                        "donationDate",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Blood record not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a blood record",
        "tags": [
          "Blood"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Blood record deleted successfully"
          },
          "404": {
            "description": "Blood record not found"
          }
        }
      }
    },
    "/api/appointments": {
      "post": {
        "summary": "Create a new appointment",
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Appointment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all appointments",
        "tags": [
          "Appointment"
        ],
        "responses": {
          "200": {
            "description": "A list of appointments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/appointments/{id}": {
      "get": {
        "summary": "Get an appointment by ID",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The appointment with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      },
      "patch": {
        "summary": "Update an appointment",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Appointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated appointment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an appointment",
        "tags": [
          "Appointment"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Appointment deleted successfully"
          },
          "404": {
            "description": "Appointment not found"
          }
        }
      }
    },
    "/api/notification": {
      "post": {
        "summary": "Create a new notification",
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Notification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all notifications",
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "A list of notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notification/{id}": {
      "get": {
        "summary": "Get a notification by ID",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The notification with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "patch": {
        "summary": "Update a notification",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Notification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated notification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a notification",
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Notification deleted successfully"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Create a new order",
        "tags": [
          "Order"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all orders",
        "tags": [
          "Order"
        ],
        "responses": {
          "200": {
            "description": "A list of orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "summary": "Get an order by ID",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The order with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "patch": {
        "summary": "Update an order",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Order not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an order",
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted successfully"
          },
          "404": {
            "description": "Order not found"
          }
        }
      }
    },
    "/api/integration": {
      "post": {
        "summary": "Register a new integration",
        "tags": [
          "Integration"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Integration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all integrations",
        "tags": [
          "Integration"
        ],
        "responses": {
          "200": {
            "description": "A list of integrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integration/{id}": {
      "get": {
        "summary": "Get an integration by ID",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The integration with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found"
          }
        }
      },
      "patch": {
        "summary": "Update an integration",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an integration",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Integration deleted successfully"
          },
          "404": {
            "description": "Integration not found"
          }
        }
      }
    },
    "/api/report": {
      "post": {
        "summary": "Create a new report",
        "tags": [
          "Report"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Report"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all reports",
        "tags": [
          "Report"
        ],
        "responses": {
          "200": {
            "description": "A list of reports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/report/{id}": {
      "get": {
        "summary": "Get a report by ID",
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The report with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "404": {
            "description": "Report not found"
          }
        }
      },
      "patch": {
        "summary": "Update a report",
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Report"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "404": {
            "description": "Report not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a report",
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Report deleted successfully"
          },
          "404": {
            "description": "Report not found"
          }
        }
      }
    },
    "/api/donation": {
      "post": {
        "summary": "Create a new donation",
        "tags": [
          "Donation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Donation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created donation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all donations",
        "tags": [
          "Donation"
        ],
        "responses": {
          "200": {
            "description": "A list of donations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Donation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/donation/{id}": {
      "get": {
        "summary": "Get a donation by ID",
        "tags": [
          "Donation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The donation with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            }
          },
          "404": {
            "description": "Donation not found"
          }
        }
      },
      "patch": {
        "summary": "Update a donation",
        "tags": [
          "Donation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Donation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated donation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donation"
                }
              }
            }
          },
          "404": {
            "description": "Donation not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a donation",
        "tags": [
          "Donation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Donation deleted successfully"
          },
          "404": {
            "description": "Donation not found"
          }
        }
      }
    },
    "/api/collection": {
      "post": {
        "summary": "Register a new collection",
        "tags": [
          "Collection"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Collection"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all collections",
        "tags": [
          "Collection"
        ],
        "responses": {
          "200": {
            "description": "A list of collections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collection"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/collection/{id}": {
      "get": {
        "summary": "Get a collection by ID",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The collection with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found"
          }
        }
      },
      "patch": {
        "summary": "Update a collection",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated collection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a collection",
        "tags": [
          "Collection"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Collection deleted successfully"
          },
          "404": {
            "description": "Collection not found"
          }
        }
      }
    }
  }
}