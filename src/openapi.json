{
  "openapi": "3.0.3",
  "info": {
    "title": "Example App",
    "version": "0.0.0",
    "description": "Example App API"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "JohnDoe"
          },
          "email": {
            "type": "string",
            "example": "gogemekuse@gmail.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYSTEM_ADMIN",
              "DONOR",
              "COLLECTOR",
              "MANAGER",
              "STORE_MANAGER",
              "LABORATORY",
              "HOSPITAL"
            ],
            "example": "SYSTEM_ADMIN"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "role",
          "password",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Seblewengel Mamo"
          },
          "email": {
            "type": "string",
            "example": "gogemekuse@gmail.com"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYSTEM_ADMIN",
              "DONOR",
              "COLLECTOR",
              "MANAGER",
              "STORE_MANAGER",
              "LABORATORY",
              "HOSPITAL"
            ],
            "example": "SYSTEM_ADMIN"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "name",
          "email",
          "role",
          "password"
        ]
      },
      "Donor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "userId": {
            "type": "number",
            "example": 1
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-07-15T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "userId",
          "bloodType",
          "createdAt",
          "updatedAt"
        ]
      },
      "NewDonor": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          }
        },
        "required": [
          "userId",
          "bloodType"
        ]
      },
      "New Donor": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          }
        },
        "required": [
          "userId",
          "bloodType"
        ]
      },
      "Update Donor": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "bloodType": {
            "type": "string",
            "example": "A+"
          }
        }
      }
    },
    "parameters": {},
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "your_access_token"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "your_refresh_token"
                    }
                  },
                  "required": [
                    "accessToken",
                    "refreshToken"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "your_refresh_token"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "your_access_token"
                    }
                  },
                  "required": [
                    "accessToken"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/api/protected": {
      "get": {
        "summary": "Get protected resource",
        "tags": [
          "Protected"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A protected resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "This is a protected route"
                    },
                    "user": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/User"
                        },
                        {
                          "properties": {
                            "userId": {
                              "type": "number",
                              "example": 1
                            },
                            "username": {
                              "type": "string",
                              "example": "JohnDoe"
                            }
                          },
                          "required": [
                            "userId",
                            "username"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "user"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/donor": {
      "post": {
        "summary": "Register a new donor",
        "tags": [
          "Donor"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New Donor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created donor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all donors",
        "tags": [
          "Donor"
        ],
        "responses": {
          "200": {
            "description": "A list of donors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Donor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/donor/{id}": {
      "get": {
        "summary": "Get a donor by ID",
        "tags": [
          "Donor"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The donor with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          },
          "404": {
            "description": "Donor not found"
          }
        }
      },
      "patch": {
        "summary": "Update a donor",
        "tags": [
          "Donor"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Update Donor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated donor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Donor"
                }
              }
            }
          },
          "404": {
            "description": "Donor not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a donor",
        "tags": [
          "Donor"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Donor deleted successfully"
          },
          "404": {
            "description": "Donor not found"
          }
        }
      }
    }
  }
}